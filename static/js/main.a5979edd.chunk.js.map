{"version":3,"sources":["asset/logo.png","store/userContext.js","layout/MainHeader.js","layout/Body.js","lib/api/UserApi.js","page/SignUp.js","page/SignIn.js","layout/Header.js","lib/api/Group.js","page/Groups.js","page/MakeGroup.js","page/Main.js","layout/GroupHeader.js","lib/api/Post.js","layout/BasicModal.js","page/Group.js","page/form/GroupApply.js","page/GroupOpen.js","App.js","reportWebVitals.js","index.js","page/stylesheet/main.module.css","page/stylesheet/page.module.css","page/stylesheet/group.module.css"],"names":["UserCtx","React","createContext","user","isLoggedIn","onLogIn","onLogOut","UserContextProvider","props","useState","num","name","setUser","onLogInHandler","onLogOutHandler","memoValue","useMemo","Provider","value","children","MainHeader","userCtx","useContext","console","log","navigate","useNavigate","className","classes","Avatar","alt","src","logo","variant","sx","width","height","onClick","e","message","Button","size","preventDefault","Body","wrapper","CREATE_API","UserAPI","signIn","fetch","method","headers","body","JSON","stringify","logIn","getMyGrp","SignUp","id","setId","pw","setPw","loginHandler","a","password","result","json","data","alert","user_num","onSubmit","TextField","required","label","placeholder","onChange","target","type","to","interest","setInterest","setName","submitHandler","InputLabel","Select","labelId","MenuItem","outlined","color","Header","GrpApi","getGrpAllList","getMyGrpInfo","grp_num","getGrpNumList","postGrp","group","postGrpApply","getSharingInfo","postStartSharing","Groups","param","setParam","grpList","setGrp","isLoading","getList","useCallback","map","g","grp_name","interest_num","MakeGroup","intr","setIntr","userctx","nav","postMakeGrp","grp_leader","Main","GroupHeader","PostAPI","getAllPost","getPublicPost","getGrpPublicList","getOnePost","post_num","getGrpNumPost","getProtectedPost","cur","getUserNumPost","getMyPost","group_num","postMyPost","style","position","top","left","transform","bgcolor","border","boxShadow","p","BasicModal","open","setOpen","btn_name","Modal","onClose","aria-labelledby","aria-describedby","Box","Group","navigater","curGrp","curPost","setPost","isSelected","setSelect","myGropInfo","setInfo","share","setShare","setLoading","shareLoading","setShareLoading","shareGrp","setShareGrp","setGrpList","getAllGrpList","getShareList","grpnum","grpPosts","setPostList","isPostsLoading","setPostsLoading","getGrpPostList","getShareGrpPostList","shr","useEffect","title","setTitle","content","setContent","setType","category","setCategory","postMakeHandler","open_type","shareGrpApply","grp_num1","grp_num2","grp","post","FormControl","m","minWidth","GroupApply","nickName","setNickName","email","setEmail","activity","setActivity","nickname","main_activity","GroupOpen","useParams","openPosts","setList","App","path","element","SignIn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a5979edd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e7ef63ed.png\";","import React, { useEffect, useState, useMemo } from \"react\";\r\n\r\nconst UserCtx = React.createContext({\r\n  // userId: null,\r\n  // sessionId: null,\r\n  user: {},\r\n  isLoggedIn: false,\r\n  onLogIn: () => {},\r\n  onLogOut: () => {},\r\n});\r\n\r\nexport const UserContextProvider = (props) => {\r\n  //state\r\n  const [user, setUser] = useState({\r\n    isLoggedIn: false,\r\n    num: \"\",\r\n    name: \"\",\r\n  });\r\n\r\n  //handler\r\n  const onLogInHandler = (user) => {\r\n    setUser(user);\r\n  };\r\n\r\n  const onLogOutHandler = () => {\r\n    setUser({\r\n      isLoggedIn: false,\r\n      num: \"\",\r\n      name: \"\",\r\n    });\r\n  };\r\n\r\n  //객체를 기억하기 위해 캐싱을 한번 함\r\n  const memoValue = useMemo(\r\n    () => ({\r\n      user: user,\r\n      isLoggedIn: user.isLoggedIn,\r\n      onLogIn: onLogInHandler,\r\n      onLogOut: onLogOutHandler,\r\n    }),\r\n    [user]\r\n  );\r\n\r\n  return (\r\n    <UserCtx.Provider value={memoValue}>{props.children}</UserCtx.Provider>\r\n  );\r\n};\r\n\r\nexport default UserCtx;\r\n","import { Avatar, Button } from \"@mui/material\";\r\nimport classes from \"../page/stylesheet/main.module.css\";\r\nimport logo from \"../asset/logo.png\";\r\nimport UserCtx from \"../store/userContext\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst MainHeader = (props) => {\r\n  const userCtx = useContext(UserCtx);\r\n\r\n  const logOutHandler = (e) => {\r\n    e.preventDefault();\r\n    userCtx.onLogOut();\r\n  };\r\n  console.log(userCtx.isLoggedIn);\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <header>\r\n      <div className={classes[\"header-wrapper\"]}>\r\n        <Avatar\r\n          alt=\"\"\r\n          src={logo}\r\n          variant=\"rounded\"\r\n          sx={{ width: 200, height: 120 }}\r\n          onClick={(e) => {\r\n            navigate(\"/\");\r\n          }}\r\n        />\r\n        <h1>{props.message}</h1>\r\n        <div>\r\n          {!userCtx.isLoggedIn && (\r\n            <>\r\n              <Button\r\n                onClick={(e) => {\r\n                  navigate(\"/signIn\");\r\n                }}\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n              >\r\n                SignIn\r\n              </Button>\r\n              <Button\r\n                onClick={(e) => {\r\n                  navigate(\"/signUp\");\r\n                }}\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n              >\r\n                SignUp\r\n              </Button>\r\n            </>\r\n          )}\r\n          {userCtx.isLoggedIn && (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                onClick={(e) => {\r\n                  navigate(\"group\");\r\n                }}\r\n              >\r\n                MyGruop\r\n              </Button>\r\n              <Button onClick={logOutHandler} variant=\"contained\" size=\"large\">\r\n                Log out\r\n              </Button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainHeader;\r\n","import classes from \"../page/stylesheet/main.module.css\";\r\nimport MainHeader from \"./MainHeader\";\r\n\r\nconst Body = (props) => {\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <MainHeader message={props.message} />\r\n      <div className={classes[\"nav-wrapper\"]}>{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","const CREATE_API = \"http://localhost:4000/users\";\r\n\r\nconst UserAPI = {\r\n  signIn: (user) => {\r\n    //name, id, password\r\n    return fetch(`${CREATE_API}/signUp`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    });\r\n  },\r\n\r\n  logIn: (user) => {\r\n    //id, password\r\n    return fetch(`${CREATE_API}/login`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    });\r\n  },\r\n\r\n  getMyGrp: (user) => {\r\n    return fetch(`${CREATE_API}/grp/${user}`, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    });\r\n  },\r\n};\r\n\r\nexport default UserAPI;\r\n","import { Button, TextField } from \"@mui/material\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Body from \"../layout/Body\";\r\nimport UserAPI from \"../lib/api/UserApi\";\r\nimport UserCtx from \"../store/userContext\";\r\nimport classes from \"./stylesheet/page.module.css\";\r\n\r\nconst SignUp = () => {\r\n  const [id, setId] = useState(\"\");\r\n  const [pw, setPw] = useState(\"\");\r\n\r\n  const userCtx = useContext(UserCtx);\r\n  const navigate = useNavigate();\r\n\r\n  const loginHandler = async (e) => {\r\n    e.preventDefault();\r\n    const result = await UserAPI.logIn({\r\n      id: id,\r\n      password: pw,\r\n    });\r\n    const data = await result.json();\r\n    console.log(\"결과\", data);\r\n    if (data.message === \"Fail\") {\r\n      alert(\"로그인 실패\");\r\n    } else {\r\n      userCtx.onLogIn({\r\n        isLoggedIn: \"true\",\r\n        num: data.data.user_num,\r\n        name: data.data.name,\r\n      });\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Body message=\"로그인 페이지\">\r\n        <div className={classes[\"form-wrapper\"]}>\r\n          <form onSubmit={loginHandler}>\r\n            <div className={classes[\"item\"]}>\r\n              <label>아이디 : </label>\r\n              <TextField\r\n                required\r\n                label=\"ID\"\r\n                value={id}\r\n                placeholder=\"아이디를 입력하세요.\"\r\n                onChange={(e) => {\r\n                  setId(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n            </div>\r\n            <div className={classes[\"item\"]}>\r\n              <label>비밀번호 : </label>\r\n              <TextField\r\n                required\r\n                label=\"PW\"\r\n                value={pw}\r\n                type=\"password\"\r\n                placeholder=\"비밀번호를 입력하세요.\"\r\n                onChange={(e) => {\r\n                  setPw(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n            </div>\r\n            <Button variant=\"outline\">\r\n              <Link to=\"/\">홈으로</Link>\r\n            </Button>\r\n            <Button variant=\"outline\">\r\n              <Link to=\"/signIn\">회원가입 하기</Link>\r\n            </Button>\r\n            <Button variant=\"contained\" onClick={loginHandler}>\r\n              제출\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Body>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import { Button, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\r\nimport classes from \"./stylesheet/page.module.css\";\r\nimport React, { useState } from \"react\";\r\nimport Body from \"../layout/Body\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserAPI from \"../lib/api/UserApi\";\r\n\r\nconst SignUp = () => {\r\n  const [interest, setInterest] = useState(\"\");\r\n  const [id, setId] = useState(\"\");\r\n  const [pw, setPw] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setInterest(e.target.value);\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    const result = await UserAPI.signIn({\r\n      name: name,\r\n      id: id,\r\n      password: pw,\r\n    });\r\n    console.log(result);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Body message=\"회원가입 페이지\">\r\n        <div className={classes[\"form-wrapper\"]}>\r\n          <form onSubmit={submitHandler}>\r\n            <div className={classes[\"item\"]}>\r\n              <label>아이디 : </label>\r\n              <TextField\r\n                required\r\n                label=\"ID\"\r\n                value={id}\r\n                placeholder=\"아이디를 입력하세요.\"\r\n                onChange={(e) => {\r\n                  setId(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n            </div>\r\n            <div className={classes[\"item\"]}>\r\n              <label>비밀번호 : </label>\r\n              <TextField\r\n                required\r\n                label=\"PW\"\r\n                value={pw}\r\n                type=\"password\"\r\n                placeholder=\"비밀번호를 입력하세요.\"\r\n                onChange={(e) => {\r\n                  setPw(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n            </div>\r\n            <div className={classes[\"item\"]}>\r\n              <label>이름 : </label>\r\n              <TextField\r\n                required\r\n                label=\"name\"\r\n                value={name}\r\n                placeholder=\"이름을 입력하세요\"\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n            </div>\r\n            <div className={classes[\"item\"]}>\r\n              <InputLabel>관심사를 고르세요.</InputLabel>\r\n              <label>관심사 : </label>\r\n              <Select\r\n                labelId=\"simple-label\"\r\n                value={interest}\r\n                onChange={handleChange}\r\n              >\r\n                <MenuItem value={\"Cumputer\"}>컴퓨터</MenuItem>\r\n                <MenuItem value={\"Developer\"}>개발자</MenuItem>\r\n                <MenuItem value={\"Java\"}>자바</MenuItem>\r\n                <MenuItem value={\"C\"}>C</MenuItem>\r\n                <MenuItem value={\"JS\"}>자바스크립트</MenuItem>\r\n                <MenuItem value={\"Python\"}>파이썬</MenuItem>\r\n              </Select>\r\n              <br />\r\n            </div>\r\n            <div className={classes[\"item\"]}>\r\n              <Button outlined=\"contained\" color=\"error\">\r\n                <Link to=\"/signUp\">나가기</Link>\r\n              </Button>\r\n              <Button variant=\"contained\" type=\"submit\">\r\n                제출\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Body>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import { Avatar, Button } from \"@mui/material\";\r\nimport classes from \"../page/stylesheet/main.module.css\";\r\nimport logo from \"../asset/logo.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <header>\r\n      <div className={classes[\"header-wrapper\"]}>\r\n        <Avatar\r\n          alt=\"\"\r\n          src={logo}\r\n          variant=\"rounded\"\r\n          sx={{ width: 200, height: 120 }}\r\n          onClick={(e) => {\r\n            navigate(\"/\");\r\n          }}\r\n        />\r\n        <h1>{props.message}</h1>\r\n        <Button\r\n          onClick={(e) => {\r\n            navigate(\"make\");\r\n          }}\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n        >\r\n          그룹 만들기\r\n        </Button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const CREATE_API = \"http://localhost:4000/groups\";\r\n\r\nconst GrpApi = {\r\n  getGrpAllList: () => {\r\n    return fetch(`${CREATE_API}/all`, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    });\r\n  },\r\n\r\n  getMyGrpInfo: (grp_num) => {\r\n    return fetch(`${CREATE_API}/withInterest/group_num/${grp_num}`, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    });\r\n  },\r\n\r\n  getGrpNumList: (grp_num) => {\r\n    //name, id, password\r\n    return fetch(`${CREATE_API}/withInterest/group_num/${grp_num}`, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    });\r\n  },\r\n\r\n  postGrp: (group) => {\r\n    //interest_num, grp_name, grp_leader, grp_create_date\r\n    return fetch(`${CREATE_API}/addGroup`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(group),\r\n    });\r\n  },\r\n\r\n  postGrpApply: (group) => {\r\n    //user_num,grp_num,register_date,grade,register_state,nickname,email,main_activity\r\n    return fetch(`${CREATE_API}/joinGroup`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(group),\r\n    });\r\n  },\r\n\r\n  // postUpdateState: (group) => {\r\n  //   //user_num,grp_num,register_date,grade,register_state,nickname,email,main_activity\r\n  //   return fetch(\r\n  //     `${CREATE_API}/change/user_num/${user_num}/grp_num/:${grp_num}/register_state/${register_state}`,\r\n  //     {\r\n  //       method: \"post\",\r\n  //       headers: {\r\n  //         \"Content-type\": \"application/json\",\r\n  //       },\r\n  //       body: JSON.stringify(group),\r\n  //     }\r\n  //   );\r\n  // },\r\n  getSharingInfo: (grp_num) => {\r\n    return fetch(`${CREATE_API}/groupSharing/grp_num/${grp_num}`, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    });\r\n  },\r\n  postStartSharing: (group) => {\r\n    return fetch(`${CREATE_API}/startGroupSharing`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(group),\r\n    });\r\n  },\r\n};\r\n\r\nexport default GrpApi;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Link, Outlet, useNavigate } from \"react-router-dom\";\r\nimport classes from \"./stylesheet/group.module.css\";\r\nimport Header from \"../layout/Header\";\r\nimport { Button, TextField } from \"@mui/material\";\r\nimport GrpApi from \"../lib/api/Group\";\r\n\r\nconst Groups = () => {\r\n  const [param, setParam] = useState(\"\");\r\n  const navigator = useNavigate();\r\n\r\n  const [grpList, setGrp] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const getList = useCallback(async () => {\r\n    const result = await GrpApi.getGrpAllList();\r\n    const data = await result.json();\r\n    console.log(data);\r\n    setGrp(data.data);\r\n  }, [grpList, isLoading]);\r\n\r\n  const searchHandler = () => {\r\n    getList();\r\n  };\r\n\r\n  const onChangeParamHandler = (e) => {\r\n    setParam(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header message=\"그룹 찾기\" />\r\n      <div className={classes[\"wrapper\"]}>\r\n        <>\r\n          <section className={classes[\"group-wrapper\"]}>\r\n            <article className={classes[\"search\"]}>\r\n              <TextField\r\n                type=\"text\"\r\n                placeholder=\"검색어를 입력하세요.\"\r\n                value={param}\r\n                onChange={onChangeParamHandler}\r\n              />\r\n              <Button variant=\"contained\" size=\"large\" onClick={searchHandler}>\r\n                검색하기\r\n              </Button>\r\n              <hr />\r\n              {isLoading && <div>그룹 검색 결과 나열</div>}\r\n              {!isLoading &&\r\n                grpList.map((g) => {\r\n                  return (\r\n                    <div key={g.grp_num}>\r\n                      <p>그룹명 : {g.grp_name}</p>\r\n                      <p>그룹번호 : {g.grp_num}</p>\r\n                      <p>관심사 번호 : {g.interest_num}</p>\r\n                      <Link to={`${g.grp_num}`}>게시물 보기</Link>\r\n                      <hr />\r\n                    </div>\r\n                  );\r\n                })}\r\n            </article>\r\n            <article className={classes[\"result\"]}>\r\n              <Outlet />\r\n            </article>\r\n          </section>\r\n        </>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Groups;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { TextField, Button } from \"@mui/material\";\r\nimport UserCtx from \"../store/userContext\";\r\nimport GrpApi from \"../lib/api/Group\";\r\n\r\nconst MakeGroup = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [intr, setIntr] = useState(\"\");\r\n\r\n  const userctx = useContext(UserCtx);\r\n  const nav = useNavigate();\r\n\r\n  const postMakeGrp = async (e) => {\r\n    e.preventDefault();\r\n    const result = await GrpApi.postGrp({\r\n      interest_num: intr,\r\n      grp_name: name,\r\n      grp_leader: userctx.user.num,\r\n    });\r\n    const data = await result.json();\r\n    console.log(data);\r\n    if (data.message === \"Success\") {\r\n      alert(\"그룹 만들기 완료\");\r\n      nav(\"/groups\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>그룹 만들기</h1>\r\n      <Link to=\"/groups\">나가기</Link>\r\n      <hr />\r\n      <form onSubmit={postMakeGrp}>\r\n        <label>그룹 이름 : </label>\r\n        <TextField\r\n          required\r\n          label=\"그룹 이름\"\r\n          variant=\"standard\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <br />\r\n        <label> 관심사 : </label>\r\n        <TextField\r\n          required\r\n          label=\"관심사\"\r\n          variant=\"standard\"\r\n          onChange={(e) => setIntr(e.target.value)}\r\n          value={intr}\r\n        />\r\n        <br />\r\n        <Button variant=\"contained\" type=\"submit\">\r\n          그룹 추가 하기\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MakeGroup;\r\n","import { useContext } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport UserCtx from \"../store/userContext\";\r\nimport classes from \"./stylesheet/main.module.css\";\r\nimport Body from \"../layout/Body\";\r\n\r\nconst Main = () => {\r\n  const userCtx = useContext(UserCtx);\r\n\r\n  return (\r\n    <>\r\n      <Body message=\"메인 페이지\">\r\n        <section>\r\n          <div className={classes[\"nav-item\"]}>\r\n            <h1>그룹을 검색하세요.</h1>\r\n            <Link to=\"groups\">그룹 찾기</Link>\r\n          </div>\r\n          <div className={classes[\"nav-item\"]}>\r\n            {userCtx.isLoggedIn ? (\r\n              <h1>내 그룹에서 활동하세요.</h1>\r\n            ) : (\r\n              <h1>로그인을 통해서 그룹에 가입 하세요.</h1>\r\n            )}\r\n            {userCtx.isLoggedIn ? (\r\n              <Link to=\"group\">내 그룹 가기</Link>\r\n            ) : (\r\n              <Link to=\"signUp\">로그인 하기</Link>\r\n            )}\r\n          </div>\r\n        </section>\r\n      </Body>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { Avatar, Button } from \"@mui/material\";\r\nimport classes from \"../page/stylesheet/main.module.css\";\r\nimport logo from \"../asset/logo.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst GroupHeader = (props) => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <header>\r\n      <div className={classes[\"header-wrapper\"]}>\r\n        <Avatar\r\n          alt=\"\"\r\n          src={logo}\r\n          variant=\"rounded\"\r\n          sx={{ width: 200, height: 120 }}\r\n          onClick={(e) => {\r\n            navigate(\"/\");\r\n          }}\r\n        />\r\n        <h1>{props.message}</h1>\r\n        <p>그룹 정보</p>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default GroupHeader;\r\n","const CREATE_API = \"http://localhost:4000/posts\";\r\n\r\nconst PostAPI = {\r\n  getAllPost: () => {\r\n    return fetch(`${CREATE_API}/`, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    });\r\n  },\r\n  getPublicPost: () => {\r\n    return fetch(`${CREATE_API}/public`, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    });\r\n  },\r\n  getGrpPublicList: (grp_num) => {\r\n    //name, id, password\r\n    return fetch(`${CREATE_API}/public/grpNum/${grp_num}`, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    });\r\n  },\r\n  getOnePost: (post_num) => {\r\n    //name, id, password\r\n    return fetch(`${CREATE_API}/post_num/${post_num}`, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    });\r\n  },\r\n  getGrpNumPost: (grp_num) => {\r\n    return fetch(`${CREATE_API}/grp_num/${grp_num}`, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    });\r\n  },\r\n\r\n  getProtectedPost: (cur) => {\r\n    return fetch(`${CREATE_API}/shareProtected/${cur}`, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    });\r\n  },\r\n\r\n  getUserNumPost: (user_num) => {\r\n    //name, id, password\r\n    return fetch(`${CREATE_API}/user_num/${user_num}`, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    });\r\n  },\r\n  getMyPost: (user_num, group_num) => {\r\n    //name, id, password\r\n    return fetch(`${CREATE_API}/user_num/${user_num}/group_num/${group_num}`, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    });\r\n  },\r\n  postMyPost: (body) => {\r\n    //main_interest,sub_interest\r\n    return fetch(`${CREATE_API}/addPost`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n  },\r\n};\r\n\r\nexport default PostAPI;\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 700,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function BasicModal(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleOpen}>{props.btn_name}</Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>{props.children}</Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport GroupHeader from \"../layout/GroupHeader\";\r\nimport GrpApi from \"../lib/api/Group\";\r\nimport UserAPI from \"../lib/api/UserApi\";\r\nimport PostAPI from \"../lib/api/Post\";\r\nimport classes from \"../page/stylesheet/main.module.css\";\r\nimport UserCtx from \"../store/userContext\";\r\nimport BasicModal from \"../layout/BasicModal\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Group = (props) => {\r\n  const userctx = useContext(UserCtx);\r\n\r\n  const navigater = useNavigate();\r\n\r\n  const [curGrp, setGrp] = useState({});\r\n  const [curPost, setPost] = useState({});\r\n  const [isSelected, setSelect] = useState(false);\r\n  const [myGropInfo, setInfo] = useState([]);\r\n  const [share, setShare] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [shareLoading, setShareLoading] = useState(false);\r\n  const [shareGrp, setShareGrp] = useState(\"\");\r\n\r\n  const getList = useCallback(async () => {\r\n    setLoading(false);\r\n    setShareLoading(false);\r\n    const result = await UserAPI.getMyGrp(userctx.user.num);\r\n    const data = await result.json();\r\n    console.log(data);\r\n    setInfo(data.data);\r\n    // eslint-disable-next-line\r\n  }, [isLoading, shareLoading, myGropInfo]);\r\n\r\n  const [grpList, setGrpList] = useState([]);\r\n\r\n  const getAllGrpList = useCallback(async () => {\r\n    const result = await GrpApi.getGrpAllList();\r\n    const data = await result.json();\r\n    console.log(data);\r\n    setGrpList(data.data);\r\n  }, [grpList]);\r\n\r\n  const getShareList = useCallback(\r\n    async (grpnum) => {\r\n      setShareLoading(true);\r\n      const result = await GrpApi.getSharingInfo(grpnum);\r\n      const data = await result.json();\r\n      console.log(data);\r\n      setShare(data.data);\r\n      // eslint-disable-next-line\r\n    },\r\n    [shareLoading, share]\r\n  );\r\n\r\n  //게시물 처리\r\n  const [grpPosts, setPostList] = useState([]);\r\n  const [isPostsLoading, setPostsLoading] = useState(false);\r\n\r\n  const getGrpPostList = useCallback(\r\n    async (grp_num) => {\r\n      const result = await PostAPI.getGrpNumPost(grp_num);\r\n      const data = await result.json();\r\n      console.log(data);\r\n      setPostList(data.data);\r\n      setPostsLoading(true);\r\n      // eslint-disable-next-line\r\n    },\r\n    [grpPosts, isPostsLoading]\r\n  );\r\n\r\n  const getShareGrpPostList = useCallback(\r\n    async (shr) => {\r\n      const result = await PostAPI.getProtectedPost(shr);\r\n      const data = await result.json();\r\n      console.log(data);\r\n      setPostList(data.data);\r\n      setShareLoading(true);\r\n      // eslint-disable-next-line\r\n    },\r\n    [grpPosts, isPostsLoading]\r\n  );\r\n\r\n  useEffect(() => {\r\n    getList();\r\n    setLoading(true);\r\n    getAllGrpList();\r\n    setShareLoading(false);\r\n    console.log(myGropInfo);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [type, setType] = useState(\"public\");\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  const postMakeHandler = async (e) => {\r\n    e.preventDefault();\r\n    const result = await PostAPI.postMyPost({\r\n      user_num: userctx.user.num,\r\n      grp_num: curGrp.grp_num,\r\n      title: title,\r\n      content: content,\r\n      open_type: type,\r\n    });\r\n    const data = await result.json();\r\n    if (data.message === \"Success\") {\r\n      alert(\"작성 완료\");\r\n    }\r\n  };\r\n\r\n  const shareGrpApply = async (e) => {\r\n    e.preventDefault();\r\n    const result = await GrpApi.postStartSharing({\r\n      grp_num1: curGrp.grp_num,\r\n      grp_num2: shareGrp,\r\n    });\r\n    const data = await result.json();\r\n    console.log(data);\r\n    if (data.message === \"Success\") {\r\n      alert(\"공유 그룹 완료\");\r\n      navigater(\"/group\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GroupHeader message=\"그룹명\" />\r\n      <div className={classes[\"group-wrapper\"]}>\r\n        <div className={classes[\"share\"]}>\r\n          <h1>내 그룹 목록</h1>\r\n          <hr />\r\n          {isLoading &&\r\n            myGropInfo.map((grp) => {\r\n              return (\r\n                <>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    onClick={(e) => {\r\n                      getShareList(grp.grp_num);\r\n                      getGrpPostList(grp.grp_num);\r\n                      setGrp(grp);\r\n                    }}\r\n                  >\r\n                    {grp.grp_name}\r\n                  </Button>\r\n                  <hr />\r\n                </>\r\n              );\r\n            })}\r\n          {shareLoading && (\r\n            <>\r\n              <h1>\r\n                {curGrp.grp_name} <br />\r\n                공유 그룹 목록\r\n              </h1>\r\n              <hr />\r\n              {isLoading &&\r\n                share.map((grp) => {\r\n                  return (\r\n                    <>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        onClick={(e) => {\r\n                          getShareGrpPostList(grp.grp_num);\r\n                        }}\r\n                      >\r\n                        {grp.grp_name}\r\n                      </Button>\r\n                      <hr />\r\n                    </>\r\n                  );\r\n                })}\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className={classes[\"allpost\"]}>\r\n          <h1>\r\n            {curGrp.grp_name}\r\n            <br />\r\n          </h1>\r\n          <hr />\r\n          {isPostsLoading &&\r\n            grpPosts.map((post) => {\r\n              return (\r\n                <div\r\n                  className={classes[\"apost\"]}\r\n                  onClick={(e) => {\r\n                    setPost(post);\r\n                    setSelect(true);\r\n                  }}\r\n                >\r\n                  <p>제목 : {post.title}</p>\r\n                  <p>유형 : {post.open_type}</p>\r\n                  <hr />\r\n                </div>\r\n              );\r\n            })}\r\n          <hr />\r\n        </div>\r\n        <div className={classes[\"post\"]}>\r\n          <div className={classes[\"post-nav\"]}>\r\n            <h1>게시글</h1>\r\n            <p>{curGrp.grp_name}</p>\r\n          </div>\r\n          <div className={classes[\"post-nav\"]}>\r\n            {isPostsLoading && (\r\n              <BasicModal btn_name=\"게시글 작성\">\r\n                <h1>게시글 작성</h1>\r\n                <p>{curGrp.grp_name}</p>\r\n                <hr />\r\n                <form onSubmit={postMakeHandler}>\r\n                  <label>제목 : </label>\r\n                  <TextField\r\n                    required\r\n                    label=\"제목\"\r\n                    variant=\"outlined\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                  />\r\n                  <br />\r\n                  <label> 내용 : </label>\r\n                  <TextField\r\n                    required\r\n                    label=\"content\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                    value={content}\r\n                  />\r\n                  <br />\r\n                  <label> 유형 : </label>\r\n                  <FormControl sx={{ m: 1, minWidth: 120 }}>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={type}\r\n                      label=\"유형\"\r\n                      onChange={(e) => {\r\n                        setType(e.target.value);\r\n                      }}\r\n                    >\r\n                      <MenuItem value={\"public\"}>공개게시물</MenuItem>\r\n                      <MenuItem value={\"protected\"}>공유게시물</MenuItem>\r\n                      <MenuItem value={\"private\"}>내부게시물</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                  <br />\r\n\r\n                  <label> 카테고리 : </label>\r\n                  <TextField\r\n                    required\r\n                    label=\"category\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => setCategory(e.target.value)}\r\n                    value={category}\r\n                  />\r\n                  <br />\r\n                  <Button variant=\"contained\" type=\"submit\">\r\n                    게시글 작성\r\n                  </Button>\r\n                </form>\r\n              </BasicModal>\r\n            )}\r\n            {isPostsLoading && (\r\n              <BasicModal btn_name=\"공유그룹 신청하기\">\r\n                <h1>공유그룹 신청하기</h1>\r\n                <hr />\r\n                <p>현재 선택한 그룹 : {curGrp.grp_name}</p>\r\n                <label>그룹 선택하기 : </label>\r\n                <FormControl sx={{ m: 1, minWidth: 120 }}>\r\n                  <Select\r\n                    value={shareGrp}\r\n                    label=\"그룹\"\r\n                    onChange={(e) => {\r\n                      setShareGrp(e.target.value);\r\n                    }}\r\n                  >\r\n                    {grpList.map((grp) => {\r\n                      return (\r\n                        <MenuItem value={grp.grp_num} key={grp.grp_num}>\r\n                          {grp.grp_name}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n                <hr />\r\n                <br />\r\n                <Button variant=\"contained\" onClick={shareGrpApply}>\r\n                  공유 그룹 신청하기\r\n                </Button>\r\n              </BasicModal>\r\n            )}\r\n          </div>\r\n\r\n          <hr />\r\n          {isSelected && (\r\n            <>\r\n              <p>게시글 번호 : {curPost.post_num}</p>\r\n              <h1>제목 : {curPost.title}</h1>\r\n              <hr />\r\n              <p>게시글 내용 : {curPost.content}</p>\r\n              <p>게시글 유형 : {curPost.open_type}</p>\r\n              <p>카테고리 : {curPost.category}</p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Group;\r\n","import React, { useContext, useState } from \"react\";\r\nimport classes from \"../stylesheet/page.module.css\";\r\n\r\nimport { Button, TextField } from \"@mui/material\";\r\nimport UserCtx from \"../../store/userContext\";\r\nimport GrpApi from \"../../lib/api/Group\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst GroupApply = (props) => {\r\n  const userCtx = useContext(UserCtx);\r\n  const navigater = useNavigate();\r\n  const [nickName, setNickName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [activity, setActivity] = useState(\"\");\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    const result = await GrpApi.postGrpApply({\r\n      user_num: userCtx.user.num,\r\n      grp_num: props.grpnum,\r\n      nickname: nickName,\r\n      email: email,\r\n      main_activity: activity,\r\n    });\r\n    const data = await result.json();\r\n    if (data.message === \"Success\") {\r\n      alert(\"가입 완료\");\r\n      navigater(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>{props.title} 그룹 가입 신청</h1>\r\n      {userCtx.user.num}\r\n      {props.grpnum}\r\n      <hr />\r\n      <div className={classes[\"form-wrapper\"]}>\r\n        <form onSubmit={submitHandler}>\r\n          <label>닉네임 : </label>\r\n          <TextField\r\n            required\r\n            label=\"nickname\"\r\n            value={nickName}\r\n            placeholder=\"닉네임을 입력하세요.\"\r\n            onChange={(e) => {\r\n              setNickName(e.target.value);\r\n            }}\r\n          />\r\n          <br />\r\n\r\n          <label>이메일 : </label>\r\n          <TextField\r\n            required\r\n            label=\"email\"\r\n            value={email}\r\n            placeholder=\"이메일을 입력하세요.\"\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n          <br />\r\n\r\n          <label>주요활동 : </label>\r\n          <TextField\r\n            required\r\n            label=\"mainactivity\"\r\n            value={activity}\r\n            placeholder=\"주요활동을 적어주세요.\"\r\n            onChange={(e) => {\r\n              setActivity(e.target.value);\r\n            }}\r\n          />\r\n          <br />\r\n\r\n          <Button variant=\"contained\" type=\"submit\">\r\n            제출\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupApply;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport BasicModal from \"../layout/BasicModal\";\r\nimport PostAPI from \"../lib/api/Post\";\r\nimport GroupApply from \"./form/GroupApply\";\r\n\r\nconst GroupOpen = (props) => {\r\n  const { num } = useParams();\r\n\r\n  const [openPosts, setList] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const getList = useCallback(async () => {\r\n    setLoading(false);\r\n    const result = await PostAPI.getGrpPublicList(num);\r\n    const data = await result.json();\r\n    console.log(data);\r\n    setList(data.data);\r\n    // eslint-disable-next-line\r\n  }, [num, isLoading]);\r\n\r\n  useEffect(() => {\r\n    getList();\r\n    setLoading(true);\r\n    // eslint-disable-next-line\r\n  }, [getList]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>그룹 공개 게시물</h1>\r\n      {isLoading && (\r\n        <BasicModal btn_name=\"그룹 가입 신청\">\r\n          <GroupApply grpnum={num} />\r\n        </BasicModal>\r\n      )}\r\n\r\n      <hr />\r\n      {isLoading &&\r\n        openPosts.map((e) => {\r\n          return (\r\n            <div key={e.post_num}>\r\n              <h1>제목 : {e.title}</h1>\r\n              <p>\r\n                공개 유형 : {e.open_type} / 글 번호:{e.post_num}{\" \"}\r\n              </p>\r\n              <p>내용 : {e.content}</p>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupOpen;\r\n","import { Route, Routes } from \"react-router-dom\";\r\nimport SignUp from \"./page/SignUp\";\r\nimport SignIn from \"./page/SignIn\";\r\nimport Groups from \"./page/Groups\";\r\nimport MakeGroup from \"./page/MakeGroup\";\r\nimport Main from \"./page/Main\";\r\nimport Group from \"./page/Group\";\r\nimport GroupOpen from \"./page/GroupOpen\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<Main />} />\r\n      <Route path=\"groups\" element={<Groups />}>\r\n        <Route path=\"make\" element={<MakeGroup />} />\r\n        <Route path=\":num\" element={<GroupOpen />} />\r\n      </Route>\r\n      <Route path=\"group\" element={<Group />} />\r\n      <Route path=\"signUp\" element={<SignUp />} />\r\n      <Route path=\"signIn\" element={<SignIn />} />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { UserContextProvider } from \"./store/userContext\";\r\n\r\nReactDOM.render(\r\n  <UserContextProvider>\r\n    <BrowserRouter>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    </BrowserRouter>\r\n  </UserContextProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"main_wrapper__9oYmz\",\"nav-wrapper\":\"main_nav-wrapper__28gIs\",\"nav-item\":\"main_nav-item__3oHMa\",\"header-wrapper\":\"main_header-wrapper__3-ZCs\",\"group-wrapper\":\"main_group-wrapper__3CmyO\",\"share\":\"main_share__29iyF\",\"allpost\":\"main_allpost__2DAyB\",\"post\":\"main_post__2rhQu\",\"post-nav\":\"main_post-nav__NX_8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-wrapper\":\"page_form-wrapper__29MID\",\"item\":\"page_item__fUsam\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"group_wrapper__1uSGt\",\"group-wrapper\":\"group_group-wrapper__2nXEV\",\"result\":\"group_result__3ApGL\",\"search\":\"group_search__1QvbS\"};"],"sourceRoot":""}